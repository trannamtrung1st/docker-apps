version: "3.8"

services:
  sql-server:
    image: mcr.microsoft.com/mssql/server:2019-CU18-ubuntu-20.04
    env_file: environments/.mssql-env
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      # - SA_PASSWORD=
    ports:
      - target: 1433
        published: 1434
    volumes:
      - ./MSSQLServer/data:/var/opt/mssql/data
      - ./MSSQLServer/log:/var/opt/mssql/log

  # TimescaleDB
  timescaledb:
    image: "timescale/timescaledb-ha:pg14-arm64"
    ports:
      - "5432:5432"
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - ./deployment/timescaledb/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file: environments/.postgres-env

  mysql:
    image: arm64v8/mysql:8.0.36
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    env_file: environments/.mysql-env
    ports:
      - "3306:3306"

  postgresql:
    image: postgres:17.2-alpine3.21
    # set shared memory limit when using docker-compose
    # shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"

  # stripe-cli:
  #   image: stripe/stripe-cli
  #   env_file: environments/.stripe-env
  #   environment:
  #     - STRIPE_DEVICE_NAME=local
  #     # - STRIPE_API_KEY=
  #   stdin_open: true
  #   tty: true
  #   entrypoint: /bin/sh

networks:
  default:
    name: tnt-shared-network
